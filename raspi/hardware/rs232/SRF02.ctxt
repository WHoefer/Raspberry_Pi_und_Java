#BlueJ class context
comment0.params=
comment0.target=SRF02()
comment0.text=\n\ Konstruktor\ der\ Klasse\ SRF02\n
comment1.params=event
comment1.target=void\ dataReceived(com.pi4j.io.serial.SerialDataEvent)
comment10.params=address
comment10.target=int\ getDistanceAutoMSecond(int)
comment10.text=\n\ getDistanceAutoMSecond\ gibt\ die\ Distanz\ in\ \u00B5s\ Zur\u00FCck.\ \n\ Es\ wird\ im\ Auto-Modus\ gemessen.\n\n\ @param\ address\ Sensoradresse\n\ @return\ Distanz\ in\ \u00B5s.\n
comment11.params=address
comment11.target=int\ getDistanceCM(int)
comment11.text=\n\ getDistanceCM\ gibt\ die\ Distanz\ in\ cm\ Zur\u00FCck.\ \n\ Es\ wird\ im\ Manuellen-Modus\ gemessen.\n\n\ @param\ address\ Sensoradresse\n\ @return\ Distanz\ in\ cm.\n
comment12.params=address
comment12.target=int\ getDistanceInches(int)
comment12.text=\n\ getDistanceInches\ gibt\ die\ Distanz\ in\ Zoll\ Zur\u00FCck.\ \n\ Es\ wird\ im\ Manuellen-Modus\ gemessen.\n\n\ @param\ address\ Sensoradresse\n\ @return\ Distanz\ in\ Zoll.\n
comment13.params=address
comment13.target=int\ getDistanceMSecond(int)
comment13.text=\n\ getDistanceMSecond\ gibt\ die\ Distanz\ in\ \u00B5s\ Zur\u00FCck.\ \n\ Es\ wird\ im\ Manuellen-Modus\ gemessen.\n\n\ @param\ address\ Sensoradresse\n\ @return\ Distanz\ in\ \u00B5s.\n
comment14.params=address
comment14.target=java.lang.String\ getFirmware(int)
comment14.text=\n\ getFirmware\ gibt\ die\ Firmware-Version\n\ des\ Sensors\ zur\u00FCck.\ Im\ Fehlerfall\ wird\ ein\n\ leere\ Zeichenkette\ zur\u00FCckgegeben.\n\n\ @param\ address\ Sensoradresse\n\ @return\ Firmware-Version\n
comment15.params=
comment15.target=void\ flush()
comment15.text=\n\ flush\ sendet\ alle\ Zeichen,\ die\ sich\ noch\ im\ Puffer\n\ befinden\ und\ leert\ die\ Puffer\ des\ UART.\n
comment16.params=
comment16.target=void\ close()
comment16.text=\n\ close\ schlie\u00DFt\ die\ Schnittstelle.\n
comment17.params=
comment17.target=void\ shutdown()
comment17.text=\n\ shutdown\ beendet\ alle\ seriellen\ Daten-Monitor-Threads.\n\ Diese\ Methode\ sollte\ immer\ vor\ dem\ Beenden\ einer\ \ Anwendung\n\ aufgerufen\ werden.\n\n
comment18.params=address
comment18.target=int\ getMinDistance(int)
comment18.text=\n\ getMinDistance\ gibt\ die\ kleinste\ zu\ messende\n\ Distanz\ zur\u00FCck.\ Die\ Einhait\ des\ R\u00FCckgabewertes\ \n\ richtet\ sich\ nach\ der\ aktuell\ eingestellten\ Einheit.\n\n\ @param\ address\ Sensoradresse\n\ @return\ Kleinste\ zu\ messende\ Distanz\n
comment19.params=addressOld\ addressNew
comment19.target=void\ setAddress(int,\ int)
comment19.text=\n\ setAddress\ \u00E4ndert\ die\ Adresse\ des\ Sensors.\ Mit\ \n\ addressOld\ wird\ der\ Sensor\ angesprochen\ und\ mit\n\ addressNew\ wird\ die\ neue\ Adresse\ gesetzt.\n\n\ @param\ addressOld\ Aktuelle\ Adresse\n\ @param\ addressNew\ Neue\ Adresse\n
comment2.params=value
comment2.target=int\ getInt(java.lang.String)
comment2.text=\n\ getInt\ wandelt\ einen\ ganzzahligen\ Wert,\ der\ in\ einer\ Zeichenkette\n\ \u00FCbergeben\ wird,\ in\ einen\ int-Wert\ um.\ Das\ h\u00F6herwertige\ Zeichen\ liegt\ \n\ in\ der\ Zeichenkette\ an\ erster\ Stelle.\n\ Wenn\ die\ Zeichenkette\ l\u00E4nger\ als\ zwei\ Zeichen\ lang\ isdt,\ wird\ 0\ zur\u00FCckgegeben.\n\n\ @param\ value\ Zeichenkette,\ die\ aus\ zwei\ zeichen\ besteht.\n\ @return\ int-Wert\n
comment3.params=value
comment3.target=void\ setBuffer(java.lang.String)
comment3.text=\n\ setBuffer\ setzt\ den\ Inhalt\ des\ RS232\ Puffers.\ Die\ ist\ nicht\ der\n\ UART\ Puffer,\ sondern\ ein\ zwischen\ Puffer,\ der\ gesendete\ und\ empfangene\n\ Zeichen\ enth\u00E4lt.\n\n\ @param\ value\ Pufferwert\n
comment4.params=
comment4.target=java.lang.String\ getBuffer()
comment4.text=\n\ getBuffer\ gibt\ den\ Inhalt\ des\ RS232\ Puffers\ zur\u00FCck.\ Dies\ ist\ nicht\ der\n\ UART\ Puffer,\ sondern\ ein\ zwischen\ Puffer,\ der\ gesendete\ und\ empfangene\n\ Zeichen\ enth\u00E4lt.\n\n\ @return\ Pufferinhalt\n
comment5.params=time
comment5.target=int\ wait(int)
comment5.text=\n\ \ wait\ h\u00E4lt\ den\ aktuellen\ Thread\ f\u00FCr\ die\ Zeit\n\ \ time\ in\ Millisekunden\ an.\ Der\ R\u00FCckgabewert\ ist\ 1.\ \n\ \ Im\ Fehlerfall\ wird\ -1\ zur\u00FCckgegeben.\n\n\ @param\ time\ Zeit\ in\ Millisekunden\n\ @return\ Fehlerstatus\ 1/-1\n
comment6.params=address\ manuallyCommand
comment6.target=int\ getDistanceManually(int,\ int)
comment6.text=\n\ getDistanceManually\ misst\ die\ Entfernung\ im\ manuellen\ Modus.\n\ Mit\ address\ wird\ die\ Adresse\ des\ Sensors\ \u00FCberegeben\ und\ mit\n\ manuallyCommand\ wird\ die\ zu\ messende\ Einheit\ angegben.\ Die\ folgenden\n\ Parameter\ sind\ f\u00FCr\ manuallyCommand\ erlaubt.<br>\n\ SRF02.START_MEASURE_INCHES.....Messung\ in\ Zoll<br>\n\ SRF02.START_MEASURE_CM.........Messung\ in\ cm<br>\n\ SRF02.START_MEASURE_MSECOND....Messung\ in\ \u00B5s<br>\n\ Im\ Fehlerfall\ wird\ -1\ zur\u00FCckgegeben.\n\n\ @param\ address\ Sensoradresse\n\ @param\ manuallyCommand\ \ Gibt\ die\ gew\u00FCnschte\ Einheit\ an\n\ @return\ Gemessene\ Distanz\ in\ der\ vorgegebenen\ Einheit\n
comment7.params=address\ autoCommand
comment7.target=int\ getDistanceAuto(int,\ int)
comment7.text=\n\ getDistanceAuto\ misst\ die\ Entfernung\ im\ automatischen\ Modus.\n\ Mit\ address\ wird\ die\ Adresse\ des\ Sensors\ \u00FCberegeben\ und\ mit\n\ autoCommand\ wird\ die\ zu\ messende\ Einheit\ angegben.\ Die\ folgenden\n\ Parameter\ sind\ f\u00FCr\ autoCommand\ erlaubt.<br>\n\ SRF02.START_AUTO_MEASURE_INCHES.....Messung\ in\ Zoll<br>\n\ SRF02.START_AUTO_MEASURE_CM.........Messung\ in\ cm<br>\n\ SRF02.START_AUTO_MEASURE_MSECOND....Messung\ in\ \u00B5s<br>\n\ Im\ Fehlerfall\ wird\ -1\ zur\u00FCckgegeben.\n\n\ @param\ address\ Sensoradresse\n\ @param\ autoCommand\ Gibt\ die\ gew\u00FCnschte\ Einheit\ an\n\ @return\ Gemessene\ Distanz\ in\ der\ vorgegebenen\ Einheit\n
comment8.params=address
comment8.target=int\ getDistanceAutoCM(int)
comment8.text=\n\ getDistanceAutoCM\ gibt\ die\ Distanz\ in\ cm\ Zur\u00FCck.\ \n\ Es\ wird\ im\ Auto-Modus\ gemessen.\n\n\ @param\ address\ Sensoradresse\n\ @return\ Distanz\ in\ cm.\n
comment9.params=address
comment9.target=int\ getDistanceAutoInches(int)
comment9.text=\n\ getDistanceAutoInches\ gibt\ die\ Distanz\ in\ Zoll\ Zur\u00FCck.\ \n\ Es\ wird\ im\ Auto-Modus\ gemessen.\n\n\ @param\ address\ Sensoradresse\n\ @return\ Distanz\ in\ Zoll.\n
numComments=20
