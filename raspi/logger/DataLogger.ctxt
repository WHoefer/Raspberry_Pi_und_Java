#BlueJ class context
comment0.params=pathStr\ fileStr\ maxListLength\ timeZone\ locale
comment0.target=DataLogger(java.lang.String,\ java.lang.String,\ long,\ java.util.TimeZone,\ java.util.Locale)
comment0.text=\r\n\ DataLogger\ Constructor<br>\r\n\r\n\ @param\ pathStr\ Speicherpfad\ der\ Logdatei\r\n\ @param\ fileStr\ Name\ der\ Logdatei\r\n\ @param\ maxListLength\ Standardl\u00E4nge\ des\ Buffers\r\n\ @param\ timeZone\ Zeitzone\r\n\ @param\ locale\ Locale\r\n
comment1.params=pathStr\ fileStr\ maxListLength
comment1.target=DataLogger(java.lang.String,\ java.lang.String,\ long)
comment1.text=\r\n\ DataLogger\ Constructor<br>\r\n\ Die\ \u00FCbergeben\ Parameter\ setzen\ Pfad\ und\ Dateiname\ der\ Logdatei\ und\ die\ Standardl\u00E4nge\ des\ Buffers.\r\n\ TimeZone\ \=\ Europe/Berlin\r\n\ Local\ \=\ Germany\r\n\r\n\ @param\ pathStr\ A\ parameter\r\n\ @param\ fileStr\ A\ parameter\r\n\ @param\ maxListLength\ A\ parameter\r\n
comment10.params=singleValue
comment10.target=java.lang.String\ getLine(SingleValue)
comment10.text=\r\n\ Method\ getLine<br>\r\n\ Formatierte\ Zeichenkette\ wird\ aus\ einem\ SingelValue-Objekt\ erzeugt\ und\r\n\ zur\u00FCckgegeben.\r\n\r\n\ @param\ singleValue\ SingleValue-Objekt\r\n\ @return\ Formatierte\ Zeichenkette\r\n
comment11.params=seconds\ pinfo
comment11.target=java.util.List\ getListFromBuffer(int,\ java.lang.String)
comment11.text=\r\n\ Method\ getListFromFile<br>\r\n\ Aus\ dem\ Buffer\ werden\ die\ letzten\ Werte,\ die\ die\ Bezeichnung\ pinfo\ haben,\ gesucht\r\n\ und\ als\ Liste\ von\ SingleValue-Objekten\ zur\u00FCckgegeben.\ Der\ Parameter\ seconds\ gibt\ die\ \r\n\ Anzahl\ an\ Sekunden\ an,\ die\ in\ die\ Verganagenheit\ gesucht\ wird.\r\n\r\n\ @param\ seconds\ R\u00FCckw\u00E4rtiger\ Zeitbereich\ in\ Sekunden\r\n\ @param\ pinfo\ Bezeichnung\ f\u00FCr\ die\ zu\ suchenden\ Werte.\r\n\ @return\ Liste\ von\ SingleValue-Objekten.\r\n
comment12.params=seconds\ pinfo
comment12.target=java.util.List\ getDiagramDatePointListFromBuffer(int,\ java.lang.String)
comment12.text=\r\n\ Method\ getDiagramDatePointListFromBuffer<br>\r\n\ Aus\ dem\ Buffer\ werden\ die\ letzten\ Werte,\ die\ die\ Bezeichnung\ pinfo\ haben,\ gesucht\r\n\ und\ als\ Liste\ von\ DiagramDatePoint-Objekten\ zur\u00FCckgegeben.\ Der\ Parameter\ seconds\ gibt\ die\ \r\n\ Anzahl\ an\ Sekunden\ an,\ die\ in\ die\ Verganagenheit\ gesucht\ wird.\r\n\r\n\ @param\ seconds\ R\u00FCckw\u00E4rtiger\ Zeitbereich\ in\ Sekunden\r\n\ @param\ pinfo\ Bezeichnung\ f\u00FCr\ die\ zu\ suchenden\ Werte.\r\n\ @return\ Liste\ von\ DiagramDatePoint-Objekten.\r\n
comment13.params=start\ stopp\ pinfo
comment13.target=java.util.List\ getListFromBuffer(java.util.Calendar,\ java.util.Calendar,\ java.lang.String)
comment13.text=\r\n\ Method\ getListFromBuffer<br>\r\n\ F\u00FCr\ den\ vorgegebenen\ Zeitbereich\ und\ die\ Bezeichnung\ wird\ eine\ Liste\ von\ SingelValue-Objekten\r\n\ in\ dem\ Buffer\ gesucht\ und\ zur\u00FCckgegeben.\r\n\r\n\ @param\ start\ Startzeitpunkt\ der\ Suche.\r\n\ @param\ stopp\ Stoppzeitpunkt\ der\ Suche\r\n\ @param\ pinfo\ Es\ werden\ nur\ Werte\ it\ der\ Bezeichnung\ pinfo\ gesucht.\r\n\ @return\ Liste\ von\ SingleValue-Objekten.\r\n
comment14.params=start\ stopp\ pinfo
comment14.target=java.util.List\ getDiagramDatePointListFromBuffer(java.util.Calendar,\ java.util.Calendar,\ java.lang.String)
comment14.text=\r\n\ Method\ getDiagramDatePointListFromBuffer<br>\r\n\ F\u00FCr\ den\ vorgegebenen\ Zeitbereich\ und\ die\ Bezeichnung\ wird\ eine\ Liste\ von\ \r\n\ DiagramDatePoint-Objekten\ in\ dem\ Buffer\ gesucht\ und\ zur\u00FCckgegeben.\r\n\r\n\ @param\ start\ Startzeitpunkt\ der\ Suche.\r\n\ @param\ stopp\ Stoppzeitpunkt\ der\ Suche\r\n\ @param\ pinfo\ Es\ werden\ nur\ Werte\ it\ der\ Bezeichnung\ pinfo\ gesucht.\r\n\ @return\ Liste\ von\ DiagramDatePoint-Objekten.\r\n
comment15.params=
comment15.target=java.util.List\ getDataList()
comment15.text=\r\n\ Method\ getDataList<br>\r\n\ Der\ Buffer\ wird\ zur\u00FCckgegeben.\r\n\r\n\ @return\ Eine\ Liste\ mit\ SingelValue-Objekten\ wird\ zur\u00FCckgegeben.\r\n
comment16.params=singleValue\ valueType\ info
comment16.target=void\ add(java.lang.String,\ int,\ java.lang.String)
comment16.text=\r\n\ Method\ add<br>\r\n\ Schreibt\ einen\ neuen\ Wert\ in\ den\ Buffer.\ Wenn\ vorher\ disableFileLog\ aufgerufen\r\n\ wurde,\ w\u00E4chst\ der\ Buffer\ nicht\ \u00FCber\ die\ eingestellte\ maximale\ Anzahl\ an\ Werten\ an.\r\n\r\n\ @param\ singleValue\ Neuer\ Wert\ f\u00FCr\ den\ Buffer\r\n\ @param\ valueType\ Typ\ des\ \u00FCbergebenen\ Wertes\r\n\ @param\ info\ A\ Bezeichnung\ f\u00FCr\ den\ \u00FCbergebenen\ Wert.\r\n
comment17.params=
comment17.target=void\ enableFileLog()
comment17.text=\r\n\ Method\ enableFileLog<br>\r\n\ Gibt\ das\ Schreiben\ in\ die\ Logdatei\ frei.\r\n\r\n
comment18.params=
comment18.target=void\ disableFileLog()
comment18.text=\r\n\ Method\ disableFileLog<br>\r\n\ Es\ wird\ nach\ dem\ Aufruf\ nicht\ mehr\ in\ die\ Logdatei\ geschrieben.\r\n\ Alle\ Werte\ bleiben\ im\ Buffer.\ Wird\ die\ maximale\ Gr\u00F6\u00DFe\ des\ Buffers\ erreicht,\ wird\r\n\ bei\ jedem\ neu\ eingeschriebenen\ Wert\ der\ \u00E4ltetste\ Wert\ aus\ dem\ Buffer\ entfernt.\r\n\r\n
comment19.params=
comment19.target=java.util.List\ getInfoList()
comment19.text=\r\n\ Method\ getInfoList<br>\r\n\ Liefert\ die\ folgenden\ Werte\ als\ Liste\ von\ SingelValue-Objekten\r\n\ FreeMem\:\ Freier\ Speicher\ in\ der\ aktuellen\ Partition\ in\ Byte.\r\n\ FExist\:\ \ Gibt\ true\ zur\u00FCck,\ wenn\ die\ Logdatei\ existiert,\ sonst\ false.\r\n\ Path\:\ \ \ \ Pfad\ der\ Logdatei.\r\n\ Name\:\ \ \ \ Name\ der\ Logdatei.\r\n\ BuffSize\:Gr\u00FC\u00DFe\ des\ Buffers\r\n\ \r\n\ @return\ Eine\ Liste\ mit\ SingelValue-Objekten\ wird\ zur\u00FCckgegeben.\r\n
comment2.params=
comment2.target=DataLogger()
comment2.text=\r\n\ DataLogger\ Constructor<br>\r\n\ Setzt\ folgende\ Werte\:\r\n\ TimeZone\ \=\ Europe/Berlin\r\n\ Local\ \=\ Germany\r\n\ Logdatei\ \=\ DefaultLogger.txt\r\n\ Pfad\ \=\ USER-DIR\r\n\ Standardl\u00E4nge\ des\ Buffers\ \=\ 200\r\n\r\n
comment20.params=value\ info
comment20.target=void\ add(byte,\ java.lang.String)
comment21.params=value\ info
comment21.target=void\ add(java.lang.Byte,\ java.lang.String)
comment22.params=value\ info
comment22.target=void\ add(short,\ java.lang.String)
comment23.params=value\ info
comment23.target=void\ add(java.lang.Short,\ java.lang.String)
comment24.params=value\ info
comment24.target=void\ add(int,\ java.lang.String)
comment25.params=value\ info
comment25.target=void\ add(java.lang.Integer,\ java.lang.String)
comment26.params=value\ info
comment26.target=void\ add(long,\ java.lang.String)
comment27.params=value\ info
comment27.target=void\ add(java.lang.Long,\ java.lang.String)
comment28.params=value\ info
comment28.target=void\ add(double,\ java.lang.String)
comment29.params=value\ info
comment29.target=void\ add(java.lang.Double,\ java.lang.String)
comment3.params=pathStr\ fileStr\ maxListLength
comment3.target=void\ validateCreate(java.lang.String,\ java.lang.String,\ long)
comment3.text=\r\n\ Method\ validateCreate<br>\r\n\ Die\ in\ den\ Konstruktoren\ \u00FCbergebenen\ Werte\ f\u00FCr\ den\ Pfad,\ den\ Dateiname\ und\ die\ Standardl\u00E4nge\ des\r\n\ Buffers\ werden\ validiert.\ Wird\ f\u00FCr\ die\ Pfadangabe\ pathStr\ kein\ Wert\ \u00FCbergeben,\ so\ wird\ die\r\n\ Logdatei\ im\ USER-DIR\ angelegt.\ Wird\ f\u00FCr\ den\ Dateinamen\ fileStr\ kein\ Wert\ angegeben,\ so\ wird\ die\ \r\n\ Logdatei\ DefaultLogger.txt\ genannt.\ Und\ wenn\ der\ Parameter\ maxListLength\ einen\ Wert\ kleiner\ oder\ \r\n\ gleich\ 0\ hat,\ wird\ dieser\ Wert\ auf\ 200\ gesetzt.\r\n\r\n\ @param\ pathStr\ Pfad\ der\ Logdatei\r\n\ @param\ fileStr\ Name\ der\ Logdatei\r\n\ @param\ maxListLength\ Standardl\u00E4nge\ des\ Buffers\r\n
comment30.params=value\ info
comment30.target=void\ add(float,\ java.lang.String)
comment31.params=value\ info
comment31.target=void\ add(java.lang.Float,\ java.lang.String)
comment32.params=value\ info
comment32.target=void\ add(char,\ java.lang.String)
comment33.params=value\ info
comment33.target=void\ add(java.lang.Character,\ java.lang.String)
comment34.params=value\ info
comment34.target=void\ add(boolean,\ java.lang.String)
comment35.params=value\ info
comment35.target=void\ add(java.lang.Boolean,\ java.lang.String)
comment36.params=
comment36.target=long\ getMaxListLength()
comment4.params=
comment4.target=int\ clearLogfile()
comment4.text=\r\n\ Method\ clearLogfile<br>\r\n\ Die\ Logdatei\ wird\ geleert.\ Die\ Methode\ gibt\ 1\ zur\u00FCck,\ wenn\ die\ Aktion\r\n\ erfolgreich\ war.\ Bei\ einem\ Fehler\ wird\ -1\ zur\u00FCckgegeben.\r\n\ \r\n\ @return\ int\r\n
comment5.params=
comment5.target=int\ store()
comment5.text=\r\n\ Method\ store<br>\r\n\ Die\ \u00E4ltesten\ Werte\ werden\ aus\ dem\ Buffer\ entfernt\ und\ in\ dieLogdatei\ geschrieben.\ Dabei\ werden\r\n\ so\ viele\ Werte\ gespeichert,\ bis\ der\ Buffer\ auf\ die\ Standardl\u00E4nge\ reduziert\ ist.\r\n\r\n\ @return\ int\ Gibt\ die\ Anzahl\ der\ gesicherten\ Werte\ zur\u00FCck.\r\n
comment6.params=
comment6.target=int\ storeFlush()
comment6.text=\r\n\ Method\ storeFlush<br>\r\n\ Alle\ Werte\ aus\ dem\ Buffer\ werden\ in\ die\ Logdatei\ geschrieben\ und\ der\ Buffer\ geleert.\r\n\ Wenn\ das\ Schreiben\ in\ die\ Logdatei\ gesperrt\ wurde,\ beilbt\ der\ Aufruf\ ohne\ Wirkung.\r\n\ Ist\ w\u00E4hrend\ der\ Verarbeitung\ ein\ Fehler\ aufgetreten,\ gibt\ die\ Methode\ -1\ zur\u00FCck.\r\n\ \r\n\ @return\ Gibt\ die\ Anzahl\ der\ gesicherten\ Werte\ zur\u00FCck.\r\n
comment7.params=seconds\ pinfo
comment7.target=java.util.List\ getListFromFile(int,\ java.lang.String)
comment7.text=\r\n\ Method\ getListFromFile<br>\r\n\ Aus\ der\ Logdatei\ werden\ die\ letzten\ Werte,\ die\ die\ Bezeichnung\ pinfo\ haben,\ gesucht\r\n\ und\ als\ Liste\ von\ SingleValue-Objekten\ zur\u00FCckgegeben.\ Der\ Parameter\ seconds\ gibt\ die\ \r\n\ Anzahl\ an\ Sekunden\ an,\ die\ in\ die\ Verganagenheit\ gesucht\ wird.\r\n\r\n\ @param\ seconds\ R\u00FCckw\u00E4rtiger\ Zeitbereich\ in\ Sekunden\r\n\ @param\ pinfo\ Bezeichnung\ f\u00FCr\ die\ zu\ suchenden\ Werte.\r\n\ @return\ Liste\ von\ SingleValue-Objekten.\r\n
comment8.params=start\ stopp\ pinfo
comment8.target=java.util.List\ getListFromFile(java.util.Calendar,\ java.util.Calendar,\ java.lang.String)
comment8.text=\r\n\ Method\ getListFromFile<br>\r\n\ F\u00FCr\ den\ vorgegebenen\ Zeitbereich\ und\ die\ Bezeichnung\ wird\ eine\ Liste\ von\ SingelValue-Objekten\r\n\ in\ der\ Logsatei\ gesucht\ und\ zur\u00FCckgegeben.\r\n\r\n\ @param\ start\ Startzeitpunkt\ der\ Suche.\r\n\ @param\ stopp\ Stoppzeitpunkt\ der\ Suche\r\n\ @param\ pinfo\ Es\ werden\ nur\ Werte\ it\ der\ Bezeichnung\ pinfo\ gesucht.\r\n\ @return\ Liste\ von\ SingleValue-Objekten.\r\n
comment9.params=start\ stopp\ pinfo
comment9.target=java.util.List\ getDiagramDatePointListFromFile(java.util.Calendar,\ java.util.Calendar,\ java.lang.String)
comment9.text=\r\n\ Method\ DiagramDatePoint<br>\r\n\ F\u00FCr\ den\ vorgegebenen\ Zeitbereich\ und\ die\ Bezeichnung\ wird\ eine\ Liste\ von\ SingelValue-Objekten\r\n\ in\ der\ Logsatei\ gesucht\ und\ zur\u00FCckgegeben.\r\n\r\n\ @param\ start\ Startzeitpunkt\ der\ Suche.\r\n\ @param\ stopp\ Stoppzeitpunkt\ der\ Suche\r\n\ @param\ pinfo\ Es\ werden\ nur\ Werte\ it\ der\ Bezeichnung\ pinfo\ gesucht.\r\n\ @return\ Liste\ von\ DiagramDatePoint-Objekten.\r\n
numComments=37
