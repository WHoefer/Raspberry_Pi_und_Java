#BlueJ class context
comment0.params=duration1\ duration2
comment0.target=java.lang.String\ addMinutes(java.lang.String,\ java.lang.String)
comment0.text=\n\ Method\ addMinutes<br>\n\ \n\ Die\ beiden\ Integer-Werte\ werden\ int\ konvertiert\ und\ addiert.\n\ Der\ R\u00FCckgabewert\ entspricht\ der\ Summe\ als\ String.\n\n\ @param\ duration1\ A\ parameter\n\ @param\ duration2\ A\ parameter\n\ @return\ The\ return\ value\n
comment1.params=duration
comment1.target=java.lang.String\ activeForMinutes(java.lang.String)
comment1.text=\n\ Method\ activeForMinutes<br>\n\ \n\ Erzeugt\ ein\ Schedule-Command,\ das\ eine\ Aktivit\u00E4t\ einer\ \n\ definierten\ Dauer\ erzeugt.\ Die\ Dauer\ wird\ durch\ den\n\ \u00DCbergabeparameter\ duration\ in\ Minuten\ festgelegt.\n\n\ @param\ duration\ Aktivit\u00E4t\ in\ Minuten\n\ @return\ Schedule-Command\n
comment10.params=command
comment10.target=java.lang.String\ getFromTimeWithSeconds(java.lang.String)
comment11.params=command
comment11.target=java.lang.String\ getFromTime(java.lang.String)
comment12.params=command
comment12.target=java.lang.String\ getToTimeWithSeconds(java.lang.String)
comment13.params=command
comment13.target=java.lang.String\ getToTime(java.lang.String)
comment14.params=command
comment14.target=boolean\ isMonday(java.lang.String)
comment15.params=command
comment15.target=boolean\ isTuesday(java.lang.String)
comment16.params=command
comment16.target=boolean\ isWednesday(java.lang.String)
comment17.params=command
comment17.target=boolean\ isThursday(java.lang.String)
comment18.params=command
comment18.target=boolean\ isFriday(java.lang.String)
comment19.params=command
comment19.target=boolean\ isSaturday(java.lang.String)
comment2.params=startMinutes\ duration
comment2.target=java.lang.String\ startInMinutes(java.lang.String,\ java.lang.String)
comment2.text=\n\ Method\ startInMinutes<br>\n\n\ Erzeugt\ ein\ Schedule-Command,\ das\ eine\ Aktivit\u00E4t\ einer\ \n\ definierten\ Dauer\ erzeugt\ und\ nach\ einer\ vorgegeben\ Zeit\n\ aktiviert\ wird.\ Die\ Dauer\ wird\ durch\ den\n\ \u00DCbergabeparameter\ duration\ in\ Minuten\ festgelegt.\ Der\n\ Startzeitpunkt\ wird\ durch\ den\ Parameter\ startMinutes\ \u00FCbergeben.\n\ \n\ @param\ startMinutes\ Gibt\ den\ Start\ der\ Aktivit\u00E4t\ in\ Minuten\ an.\ \n\ @param\ duration\ Gibt\ die\ Dauer\ der\ Aktivit\u00E4t\ in\ Minuten\ an.\n\ @return\ Schedule-Command\n
comment20.params=command
comment20.target=boolean\ isSunday(java.lang.String)
comment3.params=startMinutes\ duration\ pulse
comment3.target=java.lang.String\ startPulseInMinutes(java.lang.String,\ java.lang.String,\ java.lang.String)
comment3.text=\n\ Method\ startPulseInMinutes<br>\n\n\ Erzeugt\ ein\ Schedule-Command,\ das\ eine\ Aktivit\u00E4t\ einer\ \n\ definierten\ Dauer\ erzeugt\ und\ nach\ einer\ vorgegeben\ Zeit\n\ aktiviert\ wird.\ Die\ Aktivit\u00E4t\ pusiert\ mit\ der\ durch\ den\n\ Parameter\ pulse\ angegebenen\ Zeit\ in\ Sekunden.\ Die\ Dauer\ wird\ durch\ den\n\ \u00DCbergabeparameter\ duration\ in\ Minuten\ festgelegt.\ Der\n\ Startzeitpunkt\ wird\ durch\ den\ Parameter\ startMinutes\ \u00FCbergeben.\n\ \n\ @param\ startMinutes\ Gibt\ den\ Start\ der\ Aktivit\u00E4t\ in\ Minuten\ an.\ \n\ @param\ duration\ Gibt\ die\ Dauer\ der\ Aktivit\u00E4t\ in\ Minuten\ an.\n\ @param\ pulse\ Gibt\ die\ Pulsdauer\ in\ Sekunden\ an,\ mit\ der\ die\ Aktivit\u00E4t\ \n\ ein-\ und\ ausgeschaltet\ wird.\n\ @return\ Schedule-Command\n
comment4.params=startMinutes\ duration\ pulse
comment4.target=java.lang.String\ startPulseInMinutes(int,\ int,\ int)
comment4.text=\n\ Method\ startPulseInMinutes<br>\n\n\ Erzeugt\ ein\ Schedule-Command,\ das\ eine\ Aktivit\u00E4t\ einer\ \n\ definierten\ Dauer\ erzeugt\ und\ nach\ einer\ vorgegeben\ Zeit\n\ aktiviert\ wird.\ Die\ Aktivit\u00E4t\ pulsiert\ mit\ der\ durch\ den\n\ Parameter\ pulse\ angegebenen\ Zeit\ in\ Sekunden.\ Die\ Dauer\ wird\ durch\ den\n\ \u00DCbergabeparameter\ duration\ in\ Minuten\ festgelegt.\ Der\n\ Startzeitpunkt\ wird\ durch\ den\ Parameter\ startMinutes\ \u00FCbergeben.\n\ \n\ @param\ startMinutes\ Gibt\ den\ Start\ der\ Aktivit\u00E4t\ in\ Minuten\ an.\ \n\ @param\ duration\ Gibt\ die\ Dauer\ der\ Aktivit\u00E4t\ in\ Minuten\ an.\n\ @param\ pulse\ Gibt\ die\ Pulsdauer\ in\ Sekunden\ an,\ mit\ der\ die\ Aktivit\u00E4t\ \n\ ein-\ und\ ausgeschaltet\ wird.\n\ @return\ Schedule-Command\n
comment5.params=startSeconds\ duration\ pulse
comment5.target=java.lang.String\ startPulseInSecundes(int,\ int,\ int)
comment5.text=\n\ Method\ startPulseInMinutes<br>\n\n\ Erzeugt\ ein\ Schedule-Command,\ das\ eine\ Aktivit\u00E4t\ einer\ \n\ definierten\ Dauer\ erzeugt\ und\ nach\ einer\ vorgegeben\ Zeit\n\ aktiviert\ wird.\ Die\ Aktivit\u00E4t\ pulsiert\ mit\ der\ durch\ den\n\ Parameter\ pulse\ angegebenen\ Zeit\ in\ Sekunden.\ Die\ Dauer\ wird\ durch\ den\n\ \u00DCbergabeparameter\ duration\ in\ Sekunden\ festgelegt.\ Der\n\ Startzeitpunkt\ wird\ durch\ den\ Parameter\ startSeconds\ \u00FCbergeben.\n\ \n\ @param\ startMinutes\ Gibt\ den\ Start\ der\ Aktivit\u00E4t\ in\ Sekunden\ an.\ \n\ @param\ duration\ Gibt\ die\ Dauer\ der\ Aktivit\u00E4t\ in\ Sekunden\ an.\n\ @param\ pulse\ Gibt\ die\ Pulsdauer\ in\ Sekunden\ an,\ mit\ der\ die\ Aktivit\u00E4t\ \n\ ein-\ und\ ausgeschaltet\ wird.\n\ @return\ Schedule-Command\n
comment6.params=startTime\ stopTime\ days
comment6.target=java.lang.String\ startFromTo(java.lang.String,\ java.lang.String,\ java.lang.String)
comment6.text=\n\ Method\ startFromTo<br>\n\n\ Erzeugt\ ein\ Schedule-Command,\ f\u00FCr\ das\ die\ \u00FCbergebenen\ Tage\ von\ der\ startTime\ bis\ zur\ stopTime\ aktiv\ ist\n\ und\ nicht\ pulsiert.\ Die\ \u00FCbergebenen\ Zeiten\ m\u00FCssen\ das\ Format\ HHmmss\ haben.\ Die\ Tage\ werden\ im\ Format\ \n\ wwwwwww\ \u00FCbergeben.\ Das\ erste\ w\ steht\ hier\ f\u00FCr\ den\ Montag\ und\ kann\ 1\ f\u00FCr\ aktiv\ oder\ 0\ f\u00FCr\ inaktiv\ gesetzt\n\ werden.\ Die\ weiteren\ Felder\ sind\ die\ Wochentage\ bis\ einschlie\u00DFlich\ Sonntag.\ 1111111\ setzte\ alle\ Wochentage\ \n\ auf\ aktiv\ und\ 0000000\ setzt\ alle\ Wochentage\ inaktiv.\n\n\ @param\ startTime\ Startzeit\ HHmmss\n\ @param\ stopTime\ Stopzeit\ HHmmss\n\ @param\ days\ Tage\ in\ der\ Woche\ wwwwwww\n\ @return\ Schedule-Command\n
comment7.params=startTime\ stopTime
comment7.target=java.lang.String\ startFromToAllDays(java.lang.String,\ java.lang.String)
comment7.text=\n\ Method\ startFromToAllDays<br>\n\n\ Erzeugt\ ein\ Schedule-Command,\ das\ f\u00FCr\ alle\ Tage\ in\ der\ Woche\ von\ der\ startTime\ bis\ zur\ stopTime\ aktiv\ ist\n\ und\ nicht\ pulsiert.\ Die\ \u00FCbergebenen\ Zeiten\ m\u00FCssen\ das\ Format\ HHmmss\ haben.\ \n\n\ @param\ startTime\ Startzeit\ HHmmss\n\ @param\ stopTime\ Stopzeit\ HHmmss\n\ @return\ Schedule-Command\n
comment8.params=
comment8.target=java.lang.String\ allwaysOn()
comment8.text=\n\ Method\ allwaysOn\n\n\ @return\ String\ Schedule-Command\n
comment9.params=
comment9.target=java.lang.String\ allwaysOff()
comment9.text=\n\ Method\ allwaysOff\n\n\ @return\ String\ Schedule-Command\n
numComments=21
